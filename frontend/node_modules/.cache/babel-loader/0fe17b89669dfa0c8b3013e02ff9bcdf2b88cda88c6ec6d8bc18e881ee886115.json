{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\bps-dev-ai-project1\\\\bps-dev-ai-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const chatEndRef = useRef(null);\n  const sendPrompt = async () => {\n    if (!prompt.trim()) return;\n    const userMessage = {\n      type: \"user\",\n      text: prompt\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setPrompt(\"\");\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt\n      })\n    });\n    const data = await res.json();\n    const botMessage = {\n      type: \"bot\",\n      text: data.response\n    };\n    setMessages(prev => [...prev, botMessage]);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendPrompt();\n  };\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDD16 BP ChatGPT Mini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.type}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Send a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendPrompt,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZW/XIvGiBj3vH5FaUP5osB6eI+s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","messages","setMessages","chatEndRef","sendPrompt","trim","userMessage","type","text","prev","res","fetch","method","headers","body","JSON","stringify","data","json","botMessage","response","handleKeyPress","e","key","_chatEndRef$current","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","ref","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/bps-dev-ai-project1/bps-dev-ai-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const chatEndRef = useRef(null);\n\n  const sendPrompt = async () => {\n    if (!prompt.trim()) return;\n\n    const userMessage = { type: \"user\", text: prompt };\n    setMessages((prev) => [...prev, userMessage]);\n    setPrompt(\"\");\n\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ prompt }),\n    });\n\n    const data = await res.json();\n    const botMessage = { type: \"bot\", text: data.response };\n    setMessages((prev) => [...prev, botMessage]);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") sendPrompt();\n  };\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <div className=\"App\">\n      <h1>ðŸ¤– BP ChatGPT Mini</h1>\n      <div className=\"chat-container\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`message ${msg.type}`}>\n            {msg.text}\n          </div>\n        ))}\n        <div ref={chatEndRef} />\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Send a message...\"\n        />\n        <button onClick={sendPrompt}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}